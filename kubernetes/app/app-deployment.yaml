apiVersion: apps/v1
kind: Deployment
metadata:
  name: camb-kvstore-app
  namespace: camb-kvstore
  labels:
    app: camb-kvstore
    component: api
spec:
  replicas: 3
#  strategy:
#    type: RollingUpdate
#    rollingUpdate:
#      maxSurge: 1
#      maxUnavailable: 0
  selector:
    matchLabels:
      app: camb-kvstore
      component: api
  template:
    metadata:
      labels:
        app: camb-kvstore
        component: api
#      annotations:
#        prometheus.io/scrape: "true"
#        prometheus.io/port: "8000"
#        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: app
        image: camb-kvstore:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
          protocol: TCP
          name: http
        env:
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: camb-kvstore-secret
              key: SECRET_KEY
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: camb-kvstore-secret
              key: REDIS_PASSWORD
        envFrom:
        - configMapRef:
            name: camb-kvstore-config
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/v1/health/live
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/v1/health/ready
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        # lifecycle â†’ preStop runs just before the container stops.
        # Here, it waits 5 seconds (sleep 5) to let Redis safely finish its work before Kubernetes kills it.
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 5"]
#      terminationGracePeriodSeconds: 30